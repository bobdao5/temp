import{c as R}from"./@ethereumjs-ec0ac526.js";import{r as O}from"./events-594410aa.js";import"./react-f50448e9.js";var k={},_={},y={},T;function E(){if(T)return y;T=1,Object.defineProperty(y,"__esModule",{value:!0}),y.CastSession=void 0;const n=O();let b=class extends n.EventEmitter{constructor(p){super(),this._closeFunc=p}on(p,u){return super.on(p,u)}close(){this._closeFunc()}};return y.CastSession=b,y}var M;function P(){if(M)return _;M=1;var n=R&&R.__awaiter||function(u,f,s,d){function r(o){return o instanceof s?o:new s(function(e){e(o)})}return new(s||(s=Promise))(function(o,e){function t(a){try{c(d.next(a))}catch(l){e(l)}}function i(a){try{c(d.throw(a))}catch(l){e(l)}}function c(a){a.done?o(a.value):r(a.value).then(t,i)}c((d=d.apply(u,f||[])).next())})};Object.defineProperty(_,"__esModule",{value:!0});const b=E();function w(u,f,s,d){return n(this,void 0,void 0,function*(){const r=u?"https":"http",o=s.includes("://")?"rtmp":"streamKey",e=yield fetch(`${r}://${f}/wrtc/offer?${o}=${s}`,{method:"POST",body:JSON.stringify(d),headers:{["content-type"]:"application/json"}});if(e.status!==200)throw new Error(`Error response from server: ${e.status}`);const t=yield e.json();return new RTCSessionDescription(t)})}function p(u,f,s,d){const r=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]}),o=new b.CastSession(()=>r.close());return s.getTracks().forEach(t=>r.addTrack(t,s)),r.onicegatheringstatechange=()=>n(this,void 0,void 0,function*(){if(r.iceGatheringState==="complete")try{const t=yield w(u,f,d,r.localDescription);r.signalingState!=="closed"&&(yield r.setRemoteDescription(t))}catch(t){o.emit("error",t)}}),r.onconnectionstatechange=()=>{switch(r.connectionState){case"connected":o.emit("open");break;case"closed":o.emit("closed");break;case"failed":o.emit("error",new Error("WebRTC connection failed."));break}},(()=>n(this,void 0,void 0,function*(){try{const t=yield r.createOffer();yield r.setLocalDescription(t)}catch(t){o.emit("error",t)}}))(),o}return _.default=p,_}var h={},W;function q(){if(W)return h;W=1,Object.defineProperty(h,"__esModule",{value:!0}),h.getMimeType=h.WebSocketError=void 0;const n=E();class b extends Error{constructor(t,i){super(i),this.code=t}}h.WebSocketError=b;function w(){const e=["video/webm;codecs=h264","video/webm","video/webm;codecs=opus","video/webm;codecs=vp8","video/webm;codecs=daala","video/mpeg","video/mp4"];let t=null;for(const i of e)if(MediaRecorder.isTypeSupported(i)){t=i;break}return t}h.getMimeType=w;function p(e){const t=encodeURIComponent,i=Object.keys(e).filter(c=>!!e[c]).map(c=>t(c)+"="+t(e[c].toString())).join("&");return i.length===0?"":"?"+i}function u(e,t,i,c){const a=e?"wss":"ws",l=i.includes("://")?"rtmp":"streamKey",v=p({[l]:i,mimeType:c}),m=`${a}://${t}/ws${v}`;return new WebSocket(m)}function f(e,t){r(e),t.close(1e3)}const s=2e3;function d(e){e.state!=="recording"&&e.start(s)}function r(e){e.state!=="inactive"&&(e.ondataavailable=null,e.stop())}function o(e,t,i,c){if(!window.MediaRecorder)throw new Error("Media Recorder API is not supported in this browser.");const a=w();if(!a)throw new Error("Media Recorder does not support any valid MIME type.");const l=u(e,t,c,a),v=new MediaRecorder(i,{mimeType:a,audioBitsPerSecond:128*1e3,videoBitsPerSecond:3*1024*1024}),m=new n.CastSession(()=>f(v,l));let S=!1;return v.ondataavailable=function(C){const{data:g}=C;S&&l.send(g)},l.addEventListener("open",()=>{S=!0,d(v),m.emit("open")}),l.addEventListener("close",({code:C,reason:g})=>{S=!1,f(v,l),C!==1e3&&m.emit("error",new b(C,"abnormal websocket closure")),m.emit("close")}),m}return h.default=o,h}var j;function U(){return j||(j=1,function(n){Object.defineProperty(n,"__esModule",{value:!0}),n.WebSocketError=n.CastSession=n.isSupported=n.Client=void 0;const b=P(),w=q();class p{constructor(r={}){const{secure:o=!0,baseUrl:e="origin.livepeer.com/webrtmp",transport:t="ws"}=r;this.secure=o,this.baseUrl=e,this.transport=t}cast(r,o){if(!o)throw new Error("Invalid streamKey.");let{transport:e}=this;if(e==="auto"&&(e=u()?"ws":"wrtc"),e==="ws")return(0,w.default)(this.secure,this.baseUrl,r,o);if(e==="wrtc")return(0,b.default)(this.secure,this.baseUrl,r,o);throw new Error("Invalid transport; should be either 'ws', 'wrtc' or 'auto'.")}}n.Client=p;function u(){return(0,w.getMimeType)().includes("h264")}n.isSupported=u;var f=E();Object.defineProperty(n,"CastSession",{enumerable:!0,get:function(){return f.CastSession}});var s=q();Object.defineProperty(n,"WebSocketError",{enumerable:!0,get:function(){return s.WebSocketError}})}(k)),k}export{U as r};
