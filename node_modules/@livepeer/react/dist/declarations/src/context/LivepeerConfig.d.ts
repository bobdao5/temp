import { LivepeerConfigProps as CoreLivepeerConfigProps, useClient as useClientCore } from '@livepeer/core-react/context';
import { ThemeConfig } from 'livepeer/media';
import { LivepeerProvider } from 'livepeer/types';
import * as React from 'react';
export declare const Context: React.Context<import("@livepeer/core-react/client").Client<LivepeerProvider> | undefined>;
export declare const QueryClientContext: React.Context<import("@tanstack/query-core").QueryClient | undefined>;
export declare const useClient: typeof useClientCore;
export type LivepeerConfigProps<TLivepeerProvider extends LivepeerProvider = LivepeerProvider> = CoreLivepeerConfigProps<TLivepeerProvider> & {
    /** Theme used for React components */
    theme?: ThemeConfig;
};
export declare function LivepeerConfig<TLivepeerProvider extends LivepeerProvider>({ children, client, theme, dehydratedState, }: React.PropsWithChildren<LivepeerConfigProps<TLivepeerProvider>>): import("react/jsx-runtime").JSX.Element;
