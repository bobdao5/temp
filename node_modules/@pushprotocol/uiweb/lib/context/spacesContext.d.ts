import React from 'react';
import * as PushAPI from '@pushprotocol/restapi';
import { SpaceDTO, SpaceIFeeds } from '@pushprotocol/restapi';
import { SignerType } from '../types';
import { ENV } from '../config';
export interface ISpaceInfo {
    [key: string]: SpaceDTO;
}
export interface ISpaceSpeakerData {
    [key: string]: PushAPI.video.VideoDataType;
}
export interface ISpacePaginationData {
    apiData?: SpaceIFeeds[];
    currentPage?: number;
    lastPage?: number;
}
export interface ISpaceDataContextValues {
    account: string;
    setAccount: React.Dispatch<React.SetStateAction<string>>;
    signer: SignerType | undefined;
    setSigner: React.Dispatch<React.SetStateAction<SignerType>>;
    pgpPrivateKey: string;
    setPgpPrivateKey: React.Dispatch<React.SetStateAction<string>>;
    env: ENV;
    setEnv: React.Dispatch<React.SetStateAction<ENV>>;
    trendingListData: any;
    setTrendingListData: React.Dispatch<React.SetStateAction<any>>;
    spaceInfo: ISpaceInfo;
    setSpaceInfo: (key: string, value: SpaceDTO) => void;
    getSpaceInfo: (key: string) => SpaceDTO | undefined;
    spaceWidgetId: string;
    setSpaceWidgetId: React.Dispatch<React.SetStateAction<string>>;
    mySpaces: ISpacePaginationData;
    setMySpaces: (paginationData: ISpacePaginationData) => void;
    popularSpaces: ISpacePaginationData;
    setPopularSpaces: (paginationData: ISpacePaginationData) => void;
    spaceRequests: ISpacePaginationData;
    setSpaceRequests: (paginationData: ISpacePaginationData) => void;
    spaceObjectData: PushAPI.SpaceData;
    setSpaceObjectData: (data: any) => void;
    initSpaceObject: (data: any) => Promise<void>;
    spacesObjectRef: React.MutableRefObject<any>;
    isJoined: boolean;
    isSpeaker: boolean;
    isListener: boolean;
    speakerData: ISpaceSpeakerData;
    setSpeakerData: (key: string, value: PushAPI.video.VideoDataType) => void;
}
export declare const initialSpaceDataContextValues: ISpaceDataContextValues;
export declare const SpaceDataContext: React.Context<ISpaceDataContextValues>;
