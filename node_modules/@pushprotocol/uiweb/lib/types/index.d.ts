import type { ReactElement } from 'react';
import type { ENV } from '../config';
import type { ethers } from 'ethers';
import type { ParsedResponseType, IFeeds } from '@pushprotocol/restapi';
export interface IMessageIPFS {
    fromCAIP10: string;
    toCAIP10: string;
    fromDID: string;
    toDID: string;
    messageType: string;
    messageContent: string;
    signature: string;
    sigType: string;
    link: string | null;
    timestamp?: number;
    encType: string;
    encryptedSecret: string;
    icon?: ReactElement<string | any>;
}
export interface AccountEnvOptionsType {
    env?: ENV;
    account: string;
    signer: SignerType;
}
export interface ITheme {
    bgColorPrimary?: string;
    bgColorSecondary?: string;
    textColorPrimary?: string;
    textColorSecondary?: string;
    btnColorPrimary?: string;
    btnColorSecondary?: string;
    border?: string;
    borderRadius?: string;
    moduleColor?: string;
}
export declare type SignerType = ethers.Signer & {
    _signTypedData?: (domain: any, types: any, value: any) => Promise<string>;
    privateKey?: string;
};
export declare type ParsedNotificationType = ParsedResponseType & {
    channel: string;
};
export declare type NotificationFeedsType = {
    [key: string]: ParsedNotificationType;
};
export declare type ChatFeedsType = {
    [key: string]: IFeeds;
};
export interface Web3NameListType {
    [key: string]: string;
}
export declare const PUSH_TABS: {
    readonly CHATS: "CHATS";
    readonly APP_NOTIFICATIONS: "APP_NOTIFICATIONS";
};
export declare const CHAT_SOCKET_TYPE: {
    readonly CHAT: "chat";
    readonly NOTIFICATION: "notification";
};
export declare const PUSH_SUB_TABS: {
    readonly REQUESTS: "REQUESTS";
    readonly SPAM: "SPAM";
};
export declare const LOCAL_STORAGE_KEYS: {
    readonly CHATS: "CHATS";
};
export declare const SIDEBAR_PLACEHOLDER_KEYS: {
    readonly CHAT: "CHAT";
    readonly SEARCH: "SEARCH";
    readonly NOTIFICATION: "NOTIFICATION";
    readonly NEW_CHAT: "NEW_CHAT";
};
export declare type SidebarPlaceholderKeys = (typeof SIDEBAR_PLACEHOLDER_KEYS)[keyof typeof SIDEBAR_PLACEHOLDER_KEYS];
export declare type LocalStorageKeys = (typeof LOCAL_STORAGE_KEYS)[keyof typeof LOCAL_STORAGE_KEYS];
export declare type PushTabs = (typeof PUSH_TABS)[keyof typeof PUSH_TABS];
export declare type PushSubTabs = (typeof PUSH_SUB_TABS)[keyof typeof PUSH_SUB_TABS];
export declare type ChatSocketType = (typeof CHAT_SOCKET_TYPE)[keyof typeof CHAT_SOCKET_TYPE];
export interface FileMessageContent {
    content: string;
    name: string;
    type: string;
    size: number;
}
